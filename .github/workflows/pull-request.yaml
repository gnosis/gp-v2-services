name: pull request
on:
  pull_request:
  # We require PRs to be up to date before merging so technically it is not needed run the rust job
  # on main. However for the cache to be usable in PRs we do need the job on main.
  push:
    branches: [main]
jobs:
  rust-misc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - run: |
          rustup --version
          rustup show
          cargo --version
          cargo fmt --version
          cargo clippy --version
      - run: cargo fmt --all -- --check
      - run: cargo clippy --locked --workspace --all-features --all-targets -- -D warnings
  rust-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - run: cargo test --locked --all-features
      - run: |
          sudo systemctl start postgresql.service
          sudo -u postgres createuser $USER
          sudo -u postgres createdb $USER
          psql -f database/schema.sql
          # Postgres tests should not run in parallel because they use the same database.
          cargo test --locked --workspace --all-features --jobs 1 postgres -- --ignored --test-threads 1
      - run: |
          npm install ganache-cli
          node_modules/.bin/ganache-cli --networkId 5777 --gasLimit 10000000 --gasPrice 0&
      - run: cargo run --bin deploy --features bin
        working-directory: contracts
      - run: cargo test --locked --package e2e
  openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install @apidevtools/swagger-cli
      - run: node_modules/.bin/swagger-cli validate orderbook/openapi.yml
