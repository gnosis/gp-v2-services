openapi: 3.0.3
info:
  version: 0.0.1
  title: Order Book API
servers:
- url: http://localhost:8080
  description: Local
paths:
  /api/v1/order:
    post:
      summary: Create a new order.
      responses:
        201:
          description: Order has been accepted.
        400:
          $ref: "#/components/schemas/PostError"
        403:
          description: Forbidden, your account is deny-listed
        429:
          description: Too many order placements
        500:
          description: Error adding an order
      requestBody:
        description: The order to create.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderNew"
  /api/v1/orders:
    get:
      summary: Get existing orders.
      parameters:
        - name: owner
          in: query
          schema:
            $ref: "#/components/schemas/Address"
        - name: sellToken
          in: query
          schema:
            $ref: "#/components/schemas/Address"
        - name: buyToken
          in: query
          schema:
            $ref: "#/components/schemas/Address"
      responses:
        200:
          description: existing orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderFull"
  /api/v1/tip:
    get:
      summary: The tip that is used to pay solvers.
      description: The tip is calculated by the order service and depends on the current gas price and the expected gas costs to settle the trade
      parameters:
        - name: sellToken
          in: query
          schema:
            $ref: "#/components/schemas/Address"
        - name: buyToken
          in: query
          schema:
            $ref: "#/components/schemas/Address"
        - name: sellAmount
          in: query
          schema:
            $ref: "#/components/schemas/TokenAmount"
        - name: buyAmount
          in: query
          schema:
            $ref: "#/components/schemas/TokenAmount"
        - name: orderType
          in: query
          schema:
            $ref: "#/components/schemas/OrderType"
      responses:
        200:
          description: the tip
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tip"
        400:
          description: sellToken or buyToken not existent
components:
  schemas:
    Address:
      description: Ethereum 40 byte address encoded as a hex without `0x` prefix.
      type: string
      example: "6810e776880c02933d47db1b9fc05908e5386b96"
    TokenAmount:
      description: Amount of a token. uint256 encoded in decimal.
      type: string
      example: "1234567890"
    Tip:
      description: The tip that is used to pay solvers. uint256.
      type: integer
    OrderType:
      description: Is this a buy order or sell order?
      type: string
      enum: [buy, sell]
    OrderNew:
      description: Data a user provides when creating a new order.
      type: object
      properties:
        buyToken:
          $ref: "#/components/schemas/Address"
        buyAmount:
          $ref: "#/components/schemas/TokenAmount"
        sellAmount:
          $ref: "#/components/schemas/TokenAmount"
        sellToken:
          $ref: "#/components/schemas/Address"
        tip:
          $ref: "#/components/schemas/TokenAmount"
        orderType:
          $ref: "#/components/schemas/OrderType"
        partiallyFillable:
          description: Is this a fill-or-kill order or a partially fillable order?
          type: boolean
        appData:
          description: Identifier to make order unique or pass in arbitrary data. uint32 encoded in decimal.
          type: integer
        validTo:
          description: Time offset in seconds from epoch until which the order is valid. uint32.
          type: integer
        signature:
          description: 65 bytes encoded as hex without `0x` prefix. v + r + s from the spec.
          example: "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    OrderExtra:
      description: Extra order data that is returned to users when querying orders but not provided by users when creating orders.
      type: object
      properties:
        creationTime:
          description: Creation time of the order. Encoded as ISO 8601 UTC.
          type: string
          example: "2020-10-22T07:57:18Z"
        owner:
          $ref: "#/components/schemas/Address"
    OrderFull:
      allOf:
        - $ref: "#/components/schemas/OrderNew"
        - $ref: "#/components/schemas/OrderExtra"
    PostError:
      type: object
      properties:
        identifier:
          type: string
          enum: [ MissingOrderData, InvalidSignature, DuplicateOrder, InsufficientFunds]
        description:
          type: string
